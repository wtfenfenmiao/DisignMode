import java.util.Stack;

import command.command;
import command.partyCommand;

//这个是所谓的，调用者
public class remoteControl {
	command[] onCommand=new command[7];
	command[] offCommand=new command[7];
	command noCommand;
	command partyComOn=new partyCommand(onCommand);
	command partyComOff=new partyCommand(offCommand);
	Stack<command> lastCommand;
	public remoteControl()
	{
		for(int i=0;i<7;++i)
		{
			onCommand[i]=noCommand;
			offCommand[i]=noCommand;
		}
	}
	public void setCommand(int slot,command onCom,command offCom)
	{
		onCommand[slot]=onCom;
		offCommand[slot]=offCom;
	}
	public void slotOn(int slot)
	{
		onCommand[slot].excute();
		lastCommand.push(onCommand[slot]);
	}
	
	public void slotOff(int slot)
	{
		offCommand[slot].excute();
		lastCommand.push(offCommand[slot]);
	}
	
	public void undoPress()   
	{
		if(!lastCommand.empty())
		{
			command temp=lastCommand.pop();
			temp.undo();
		}
	}
	
	public void partymodeOn()
	{
		partyComOn.excute();
		lastCommand.push(partyComOn);
	}
	
	public void partymodeOff()
	{
		partyComOff.excute();
		lastCommand.push(partyComOff);
	}
	
	public String toString()
	{
		StringBuffer re=new StringBuffer();
		re.append("--state--\n");
		for(int i=0;i<7;++i)
		{
			re.append("slot "+i+":"+onCommand.getClass().getName()+" "+offCommand.getClass().getName());
		}
		return re.toString();
	}
	
	
}
